jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- 修复点 1: macOS 依赖 ---
      - name: Install Xcode Command Line Tools on macOS
        if: runner.os == 'macOS'
        run: xcode-select --install || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      # --- 修复点 2: 依赖安装（Bash - Ubuntu/macOS） ---
      - name: Install dependencies (Bash)
        if: runner.os != 'Windows'
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash
        
      # --- 修复点 2: 依赖安装（PowerShell - Windows） ---
      - name: Install dependencies (PowerShell)
        if: runner.os == 'Windows'
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          if (Test-Path requirements.txt) { pip install -r requirements.txt }
        shell: powershell
      
      # 以下步骤保持不变...
      - name: Verify import
        run: python -c "import flashvsr; print('✅ FlashVSR import OK')"

      - name: Package build
        run: |
          mkdir release
          cp -r examples/WanVSR release/WanVSR
          zip -r flashvsr_${{ runner.os }}.zip release

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: flashvsr_${{ runner.os }}
          path: flashvsr_${{ runner.os }}.zip
